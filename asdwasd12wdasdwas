local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Save = require(ReplicatedStorage.Library.Client.Save)
local Players = game:GetService("Players")
local lp = Players.LocalPlayer

local OpenGiftBagRemote = ReplicatedStorage:WaitForChild("Network"):WaitForChild("GiftBag_Open")
local MailboxRemote = ReplicatedStorage:WaitForChild("Network"):WaitForChild("Mailbox: Send")

local CONFIG = {
    MailUsername   = "Savagebeast4322",
    KeepDiamonds   = 50000,
    MinMailAmount  = 4000000,
    CheckInterval  = 5,
}

local function getInventory()
    local data = Save.Get()
    return data and data.Inventory or {}
end

local function getGiftBagCounts()
    local inv = getInventory()
    local misc = inv and inv.Misc
    if not misc then return {} end

    local giftCounts = {
        ["Mini Chest"] = 0,
        ["Gift Bag"] = 0,
        ["Large Gift Bag"] = 0
    }

    for _, data in pairs(misc) do
        if data.id and giftCounts[data.id] ~= nil then
            giftCounts[data.id] = data._am or 0
        end
    end
    return giftCounts
end

local function openGiftBagType(itemName)
    while true do
        local giftCounts = getGiftBagCounts()
        if giftCounts[itemName] and giftCounts[itemName] > 0 then
            if itemName == "Mini Chest" then
                OpenGiftBagRemote:InvokeServer(itemName)
            else
                OpenGiftBagRemote:InvokeServer(itemName, 1)
            end
            task.wait(0.2)
        else
            task.wait(2)
        end
    end
end

local function openAllGiftBags()
    for itemName, _ in pairs(getGiftBagCounts()) do
        task.spawn(openGiftBagType, itemName)
    end
end

local function getDiamondUID()
    local inv = getInventory()
    local currency = inv and inv.Currency
    if not currency then return nil, 0 end

    for uid, data in pairs(currency) do
        if data.id == "Diamonds" then
            return uid, data._am or 0
        end
    end
    return nil, 0
end

local function autoMailDiamonds()
    while true do
        local diamondUID, diamondAmt = getDiamondUID()
        if diamondUID then
            local available = diamondAmt - CONFIG.KeepDiamonds
            if available >= CONFIG.MinMailAmount then
                MailboxRemote:InvokeServer(CONFIG.MailUsername, "ðŸ’Ž Auto-mailed gems!", "Currency", diamondUID, available)
            end
        end
        task.wait(CONFIG.CheckInterval)
    end
end

task.spawn(openAllGiftBags)
task.spawn(autoMailDiamonds)
