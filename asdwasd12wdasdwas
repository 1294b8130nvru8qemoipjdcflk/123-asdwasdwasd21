--[[
    Updated Event Automation Script for Pet Simulator 99
    =====================================================
    Features:
      1. Joins the event.
      2. Farms breakables and hatches eggs for 10 minutes.
      3. Then enters auto raid mode (solo raid with best difficulty).
      4. After a set number of raids, returns to farming mode.
      5. Continuously auto purchases event upgrades and (if enabled) auto crafts clovers.
      6. Auto uses best potions/fruits and activates ultimate periodically.
      
    Adjust the CONFIG values as needed.
--]]

----------------------------
-- CONFIGURATION ----------
----------------------------
local CONFIG = {
    FARM_TIME = 600,         -- farming time in seconds (10 minutes)
    RAID_THRESHOLD = 10,     -- number of raids to complete before switching back to farming
    UPGRADES = {             -- list of event upgrades to purchase continuously
        "AutumnMoreEggLuck",
        "AutumnMoreBossDamage",
        "LuckyRaidPets",
        "LuckyRaidDamage",
        "LuckyRaidAttackSpeed",
        "LuckyRaidPetSpeed",
        "LuckyRaidEggCost",
        "LuckyRaidMoreCurrency",
        "LuckyRaidXP",
        "LuckyRaidBetterLoot",
        "LuckyRaidHugeChest",
        "LuckyRaidTitanicChest"
    },
    AUTO_CRAFT_CLOVERS = true,  -- if true, auto craft clovers into lucky gifts
}

----------------------------
-- INITIALIZATION & SETUP --
----------------------------
while not game:IsLoaded() do task.wait() end
task.wait(3)

local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Get relevant remotes from the new update
local Network = ReplicatedStorage:WaitForChild("Network")
local BreakablesJoinPetBulk = Network:WaitForChild("Breakables_JoinPetBulk")
local CustomEggsHatch = Network:WaitForChild("CustomEggs_Hatch")
local OrbsCollect = Network:WaitForChild("Orbs: Collect")
local RaidsRequestCreate = Network:WaitForChild("Raids_RequestCreate")
local RaidsJoin = Network:WaitForChild("Raids_Join")
local EventUpgradesPurchase = Network:WaitForChild("EventUpgrades: Purchase")
local LootbagsClaim = Network:WaitForChild("Lootbags_Claim")
local Click = Network:WaitForChild("Click")
local UltimatesActivate = Network:WaitForChild("Ultimates: Activate")

-- Client module (if needed for saves)
local Client = ReplicatedStorage.Library.Client

-- Simple function to get player data
local function getLpData()
    local data = require(Client.Save).GetSaves()
    return data[LocalPlayer]
end

-- Teleport helper
local function tp(cf)
    pcall(function()
        local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if hrp and (hrp.Position - cf.Position).Magnitude > 5 then
            hrp.CFrame = cf
        end
    end)
end

-- Prevent idle kick
local VirtualUser = game:GetService("VirtualUser")
LocalPlayer.Idled:Connect(function()
    VirtualUser:Button2Down(Vector2.new(0,0), Workspace.CurrentCamera.CFrame)
    task.wait(1)
    VirtualUser:Button2Up(Vector2.new(0,0), Workspace.CurrentCamera.CFrame)
end)

----------------------------
-- EVENT JOINING ----------
----------------------------
local function joinEvent()
    local args = { { ["3261"] = "11130" } }
    BreakablesJoinPetBulk:FireServer(unpack(args))
    -- Teleport to the event entry point
    tp(Workspace["__THINGS"].Instances.AutumnEvent.Teleports.Enter.CFrame)
    task.wait(3)
end

joinEvent()

----------------------------
-- EGG & BREAKABLE FUNCTIONS --
----------------------------
-- Finds the nearest egg in the CustomEggs folder
local function getClosestEgg(position)
    local Eggs = Workspace["__THINGS"]:FindFirstChild("CustomEggs")
    local closest, closestDist = nil, math.huge
    if Eggs then
        for _, egg in ipairs(Eggs:GetChildren()) do
            if egg:IsA("Model") and egg.PrimaryPart then
                local dist = (egg.PrimaryPart.Position - position).Magnitude
                if dist < closestDist then
                    closest = egg
                    closestDist = dist
                end
            end
        end
    end
    return closest
end

-- Hatches the given egg with a specified count
local function hatchEgg(egg, count)
    if egg then
        CustomEggsHatch:InvokeServer(tostring(egg.Name), count)
    end
end

-- Simulate a realistic click for auto tapping breakables
local function calculateRealisticClick(targetPosition)
    local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local function addNoise(value, magnitude)
        return value + (math.random() - 0.5) * magnitude
    end
    local direction = (targetPosition - hrp.Position).Unit
    direction = Vector3.new(addNoise(direction.X, 0.01), addNoise(direction.Y, 0.01), addNoise(direction.Z, 0.01)).Unit
    local rayOrigin = Vector3.new(addNoise(hrp.Position.X, 0.1), addNoise(hrp.Position.Y + 2, 0.1), addNoise(hrp.Position.Z, 0.1))
    local ray = Ray.new(rayOrigin, direction)
    local targetVector = Vector3.new(addNoise(targetPosition.X, 0.1), addNoise(targetPosition.Y, 0.1), addNoise(targetPosition.Z, 0.1))
    Click:FireServer(ray, targetVector)
end

-- Auto-collect orbs and loot from breakables
local function collect()
    local things = Workspace["__THINGS"]
    local orbs = {}
    if things and things.Orbs then
        for _, orb in ipairs(things.Orbs:GetChildren()) do
            table.insert(orbs, tonumber(orb.Name))
            orb:Destroy()
        end
        OrbsCollect:FireServer(orbs)
    end
    if things and things.Lootbags then
        for _, bag in ipairs(things.Lootbags:GetChildren()) do
            LootbagsClaim:FireServer({tostring(bag.Name)})
            bag:Destroy()
        end
    end
end

----------------------------
-- FARMING MODE -----------
----------------------------
local function farmAndHatch()
    local startTime = tick()
    while tick() - startTime < CONFIG.FARM_TIME do
        local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if hrp then
            local egg = getClosestEgg(hrp.Position)
            hatchEgg(egg, getLpData().EggHatchCount or 1)
        end
        -- Auto-tap breakables: pick a random breakable from the folder
        local breakablesFolder = Workspace["__THINGS"]:FindFirstChild("Breakables")
        if breakablesFolder then
            local breakablesList = breakablesFolder:GetChildren()
            if #breakablesList > 0 then
                local target = breakablesList[math.random(1, #breakablesList)]
                if target and target.PrimaryPart then
                    calculateRealisticClick(target.PrimaryPart.Position)
                end
            end
        end
        collect()
        task.wait(3)
    end
end

----------------------------
-- RAID MODE --------------
----------------------------
local function executeRaidCycle()
    local raidCounter = 0
    while raidCounter < CONFIG.RAID_THRESHOLD do
        local raidArgs = {
            [1] = {
                ["Difficulty"] = 14,  -- adjust as needed for best difficulty
                ["Portal"] = 3,       -- chosen free portal
                ["PartyMode"] = 1     -- solo mode
            }
        }
        RaidsRequestCreate:InvokeServer(unpack(raidArgs))
        task.wait(0.5)
        RaidsJoin:InvokeServer(3)
        raidCounter = raidCounter + 1
        task.wait(2)
    end
end

----------------------------
-- BACKGROUND TASKS -------
----------------------------
-- Auto event upgrades loop
local function autoEventUpgrades()
    while true do
        for _, upgrade in ipairs(CONFIG.UPGRADES) do
            pcall(function()
                EventUpgradesPurchase:InvokeServer(upgrade)
            end)
        end
        task.wait(5)
    end
end
task.spawn(autoEventUpgrades)

-- Auto craft clovers into lucky gifts (pseudo-code, adjust remote names as needed)
local function autoCraftClovers()
    while CONFIG.AUTO_CRAFT_CLOVERS do
        local cloverCount = 0  -- Replace with proper clover count retrieval
        if cloverCount >= 10 then
            pcall(function()
                Network["CraftLuckyGift"]:InvokeServer()
            end)
        end
        task.wait(10)
    end
end
if CONFIG.AUTO_CRAFT_CLOVERS then
    task.spawn(autoCraftClovers)
end

-- Auto use consumables: best potions/fruits and ultimate
local function autoUseConsumables()
    while true do
        local potionsEvent = Network:FindFirstChild("Potions_Consume")
        local fruitsEvent = Network:FindFirstChild("Fruits_Consume")
        if potionsEvent then
            potionsEvent:InvokeServer()
        end
        if fruitsEvent then
            fruitsEvent:InvokeServer()
        end
        local lpData = getLpData()
        if lpData and lpData.EquippedUltimate then
            local ult = lpData.Inventory.Ultimate[lpData.EquippedUltimate].id
            if ult then
                UltimatesActivate:InvokeServer(ult)
            end
        end
        task.wait(10)
    end
end
task.spawn(autoUseConsumables)

----------------------------
-- MAIN LOOP --------------
----------------------------
while true do
    -- Farming mode: hatch eggs and farm breakables for 10 minutes
    farmAndHatch()
    -- Then switch to raid mode until the threshold is met
    executeRaidCycle()
    task.wait(2)
end
